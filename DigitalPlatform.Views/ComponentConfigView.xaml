<Window x:Class="DigitalPlatform.Views.ComponentConfigView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DigitalPlatform.Views"
        xmlns:sys="clr-namespace:System;assembly=netstandard"
        mc:Ignorable="d"
        x:Name="win"
        WindowStartupLocation="CenterOwner"
        xmlns:c="clr-namespace:DigitalPlatform.Common.Converter;assembly=DigitalPlatform.Common"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        DataContext="{Binding Source={StaticResource locator}, Path=ConfigViewModel}"
        FontFamily="Microsoft YaHei" FontWeight="ExtraLight" FontSize="11"
        Title="设备组态编辑" Height="650" Width="1200">
    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="1"/>
    </WindowChrome.WindowChrome>

    <Window.Background>
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#DCEDfa" Offset="0"/>
            <GradientStop Color="#F7F9FA" Offset="0.1"/>
            <GradientStop Color="#F7F9FA" Offset="1"/>
        </LinearGradientBrush>
    </Window.Background>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/DigitalPlatform.Assets;component/Styles/ButtonStyles.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/DigitalPlatform.Assets;component/Styles/ComboBoxStyles.xaml"/>

                <ResourceDictionary>
                    <BooleanToVisibilityConverter  x:Key="btv"/>
                    <c:DeviceItemConverter x:Key="dic"/>
                    <c:DragConverter x:Key="drc"/>
                    <c:MouseMoveConverter x:Key="mmc"/>

                    <Style TargetType="Button" x:Key="ControlButtonStyle">
                        <Setter Property="Foreground" Value="#888"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="Transparent" Name="back">
                                        <Border CornerRadius="{Binding Tag,RelativeSource={RelativeSource Mode=TemplatedParent}}" Name="bor">
                                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="bor" Property="Background" Value="#09000000"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="bor" Property="Background" Value="#11000000"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style TargetType="ToggleButton" x:Key="StateButtonStyle">
                        <Setter Property="Foreground" Value="#AAA"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="Transparent" Name="back" CornerRadius="{Binding Tag,RelativeSource={RelativeSource Mode=TemplatedParent}}">
                                        <Border CornerRadius="{Binding Tag,RelativeSource={RelativeSource Mode=TemplatedParent}}" Name="bor">
                                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Name="content"/>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="bor" Property="Background" Value="#09000000"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="back" Property="Background">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                                                        <GradientStop Color="#AAF7F9FA" Offset="0"/>
                                                        <GradientStop Color="#5DDD" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter TargetName="content" Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect BlurRadius="5" Color="Black" ShadowDepth="0" Opacity="0.1"/>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Foreground" Value="#999"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>


            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup >
            <VisualState x:Name="SaveSuccess">
                <Storyboard>
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="successbox" Storyboard.TargetProperty="Margin">
                        <LinearThicknessKeyFrame Value="0,-80,0,0" KeyTime="0:0:0"/>
                        <LinearThicknessKeyFrame Value="0,20,0,0" KeyTime="0:0:0.3"/>
                        <LinearThicknessKeyFrame Value="0,20,0,0" KeyTime="0:0:3.3"/>
                        <LinearThicknessKeyFrame Value="0,-80,0,0" KeyTime="0:0:3.6"/>
                    </ThicknessAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="successbox" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.5"/>
                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:3.5"/>
                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:4"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </VisualState>

            <VisualState x:Name="NormalSucess"/>
        </VisualStateGroup>

        <VisualStateGroup>
            <VisualState Name="SaveFailedShow">
                <Storyboard >
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="failedbox" Storyboard.TargetProperty="Margin">
                        <LinearThicknessKeyFrame Value="0,-80,0,0" KeyTime="0:0:0"/>
                        <LinearThicknessKeyFrame Value="0,20,0,0" KeyTime="0:0:0.3"/>
                    </ThicknessAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="failedbox" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.5"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </VisualState>
            <VisualState Name="SaveFailedClose">
                <Storyboard >
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="failedbox" Storyboard.TargetProperty="Margin">
                        <LinearThicknessKeyFrame Value="0,20,0,0" KeyTime="0:0:0"/>
                        <LinearThicknessKeyFrame Value="0,-80,0,0" KeyTime="0:0:0.3"/>
                    </ThicknessAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="failedbox" Storyboard.TargetProperty="Opacity">
                        <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0"/>
                        <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.3"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </VisualState>
            <VisualState Name="SaveFailedNormal"/>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>

    <Grid>
        <Grid.Resources>

            <Style TargetType="ToggleButton" x:Key="PointMoreButtonStlye">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border CornerRadius="3" BorderBrush="Transparent" BorderThickness="1"
                                    Background="Transparent" Name="border">
                                <TextBlock Text="&#xe78d;" FontFamily="{StaticResource Iconfont}" VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Foreground="#888"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#EEE"/>
                                    <Setter TargetName="border" Property="Background" Value="#1000"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="BorderBrush" Value="#EEE"/>
                                    <Setter TargetName="border" Property="Background" Value="#11000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ToggleButton" x:Key="ExpanderToggleButton">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                        <GradientStop Color="#996364f8" Offset="0"/>
                                        <GradientStop Color="#556364f8" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid Height="26">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <Border Background="Gold" Width="4" Height="10" CornerRadius="2"
                                        VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3"/>
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="13,0"/>
                                    <TextBlock Text="&#xe6df;" FontFamily="{StaticResource Iconfont}" Grid.Column="1"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                                       RenderTransformOrigin="0.5,0.5" Name="arrow"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="arrow" Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Expander">
                <Setter Property="Margin" Value="0,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Expander">
                            <Border x:Name="Content" BorderThickness="1,0,1,1" CornerRadius="3">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#11000000" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition x:Name="ContentRow" Height="0" />
                                    </Grid.RowDefinitions>
                                    <ToggleButton Content="{TemplateBinding Header}" 
                                          Style="{StaticResource ExpanderToggleButton}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>

                                    <ContentPresenter Margin="4" Grid.Row="1" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter TargetName="ContentRow" Property="Height" Value="{Binding Height, ElementName=Content}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border BorderBrush="#EEE" BorderThickness="1" CornerRadius="3" MinHeight="26" Background="White">
                                <ScrollViewer Name="PART_ContentHost"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ToggleButton" x:Key="ManualToggleButtonStyle">
                <Setter Property="Foreground" Value="#888"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Background="Transparent" Name="back">
                                <Border CornerRadius="{Binding Tag,RelativeSource={RelativeSource Mode=TemplatedParent}}" Name="bor">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="bor" Property="Background" Value="#09000000"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="bor" Property="Background" Value="#11000000"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </Grid.Resources>
        <!--背景-->
        <Grid>
            <Grid.Background>
                <VisualBrush TileMode="Tile" Viewport="0,0,40,40" ViewportUnits="Absolute">
                    <VisualBrush.Visual>
                        <Path Data="M0,0 0,40 40 40" Stroke="#F7F9FA" StrokeThickness="1" StrokeDashArray="5,5"/>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Grid.Background>
            <Grid.OpacityMask>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="Transparent" Offset="0"/>
                    <GradientStop Color="Black" Offset="0.6"/>
                </LinearGradientBrush>
            </Grid.OpacityMask>
        </Grid>
        <Grid>
            <Grid.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="Transparent" Offset="0"/>
                    <GradientStop Color="#1116a1ff" Offset="1"/>
                </LinearGradientBrush>
            </Grid.Background>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>



            <!--编辑区域:使用ItemsControl存放所有的元素，元素放在Canvas中 可以实现自由拖拽-->
            <!--AllowDrop 允许拖拽元素-->
            <!--Background设置为透明 默认为null 接收不到鼠标动作-->
            <ItemsControl Margin="5,0"  ItemsSource="{Binding DeviceList}" 
                          AllowDrop="True" Background="Transparent" x:Name="edi" Grid.Column="1">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="Drop">
                        <!--<b:CallMethodAction/>-->
                        <b:InvokeCommandAction Command="{Binding ItemDropCommand}" PassEventArgsToCommand="True"/>
                    </b:EventTrigger>
                </b:Interaction.Triggers>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas  Background="Transparent" ClipToBounds="True">
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseLeftButtonDown">
                                    <b:InvokeCommandAction Command="{Binding DeviceSeletcedCommand}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <!--设置每一个Item的容器在Canvas中的位置-->
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left" Value="{Binding X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                        <Setter Property="Canvas.ZIndex" Value="{Binding Z}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <!--如何在模板中显示对应的图像-->
                    <DataTemplate>
                        <!--1.使用模板选择器-->
                        <!--2.使用转换器  使用ContentControl承载对应图像  Converter根据绑定子项生成对应控件-->
                        <ContentControl Content="{Binding Path=DeviceType, Converter={StaticResource dic}}" 
                                        Width="{Binding Width}" Height="{Binding Height}"
                                        Visibility="{Binding IsVisible,   Converter={StaticResource btv}}"
                                        >
                            <b:Interaction.Triggers>
                                <b:EventTrigger EventName="MouseLeftButtonDown">
                                    <!--处理拖动动作-->
                                    <b:CallMethodAction 
                                        MethodName="OnMouseLeftButtonDown" TargetObject="{Binding}"/>
                                    <!--处理选中状态-->
                                    <b:InvokeCommandAction Command="{Binding DataContext.DeviceSeletcedCommand, ElementName=win}" 
                                                           CommandParameter="{Binding}"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseMove">
                                    <b:CallMethodAction MethodName="OnMouseMove" TargetObject="{Binding}"/>
                                </b:EventTrigger>
                                <b:EventTrigger EventName="MouseLeftButtonUp">
                                    <b:CallMethodAction MethodName="OnMouseLeftButtonUp" TargetObject="{Binding}"/>
                                </b:EventTrigger>
                            </b:Interaction.Triggers>

                            <ContentControl.ContextMenu>
                                <!--List<Control> Menus-->
                                <ContextMenu ItemsSource="{Binding ContextMenus}">
                                    <ContextMenu.Resources>
                                        <Style TargetType="MenuItem">
                                            <Setter Property="Header" Value="{Binding MenuHeader}"/>
                                            <Setter Property="Command" Value="{Binding MenuCommand}"/>

                                        </Style>
                                    </ContextMenu.Resources>
                                </ContextMenu>
                            </ContentControl.ContextMenu>

                        </ContentControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

            </ItemsControl>
            <!--组件列表-->
            <ScrollViewer HorizontalAlignment="Left" 
                          Margin="10,15,0,10"  VerticalScrollBarVisibility="Hidden"
                          Visibility="{Binding Path=IsChecked, ElementName=tb_component,Converter={StaticResource btv}}">
                <ItemsControl ItemsSource="{Binding ThumbList}" Width="150">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Expander Header="{Binding Header}" IsExpanded="True">
                                <ItemsControl ItemsSource="{Binding Children}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <UniformGrid Columns="3"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border Width="40" Height="40"
                                                    Background="#EEE" Margin="0,3"
                                                    CornerRadius="5" x:Name="bor">
                                                <Border Margin="6" ToolTip="{Binding Header}">
                                                    <Border.Background>
                                                        <ImageBrush ImageSource="{Binding Icon}"/>
                                                    </Border.Background>
                                                </Border>
                                                <Border.InputBindings>
                                                    <MouseBinding MouseAction="LeftClick" 
                                                                  Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}, Path=DataContext.ThumbCommand}" 
                                                                  >
                                                        <MouseBinding.CommandParameter>
                                                            <MultiBinding Converter="{StaticResource drc}">
                                                                <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Border}" Path="DataContext"/>
                                                                <Binding ElementName="bor"/>
                                                            </MultiBinding>
                                                        </MouseBinding.CommandParameter>
                                                    </MouseBinding>
                                                </Border.InputBindings>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Expander>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>

            <!--属性表-->
            <Border Grid.Column="2" Width="220" 
                    HorizontalAlignment="Right" Margin="0,15,10,10" CornerRadius="5" Background="Transparent"
                    Visibility="{Binding Path=IsChecked, ElementName=tb_property,Converter={StaticResource btv}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Border CornerRadius="5">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Color="#996364f8" Offset="0"/>
                                <GradientStop Color="#556364f8" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                    <Border Background="Gold" Width="4" Height="10" CornerRadius="2" Margin="10,0,0,0"
                                        VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    <TextBlock VerticalAlignment="Center" Foreground="White" Margin="20,0,0,0">
                        <Run Text="参数配置"/>
                        <Run Text="{Binding CurrentDevice.Header,StringFormat= - {0}}"/>
                    </TextBlock>

                    <!--三部分内容-->
                    <!--1. 设备通信参数-->
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Hidden">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="通信参数" Margin="5,10" FontWeight="Bold" Foreground="#888"/>
                            <Button Width="24" Height="24" Style="{StaticResource WindowControlButtonStyle}" 
                                HorizontalAlignment="Right" ToolTip="添加参数"
                                Command="{Binding AddPropCommand}">
                                <Path Data="M0 5 10 5M5 0 5 10" Stroke="#555"/>
                            </Button>


                            <!--CogifViewModel-CurrentDevice属性-->
                            <ItemsControl ItemsSource="{Binding CurrentDevice.PropList}" Grid.Row="1">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="20"/>
                                            </Grid.ColumnDefinitions>
                                            <!--准备一个集合  所有的通信属性-->
                                            <!--绑定的是PropList中元素的PropName，不是当前这个cb里PropOptions的PropName-->
                                            <!--这里为什么不能 直接绑定到数据库中保存的项-->
                                            <ComboBox ItemsSource="{Binding ElementName=win,  Path=DataContext.PropOptions}"  DisplayMemberPath="Header"  SelectedValuePath="PropName" 
                                                      SelectedValue="{Binding PropName}" x:Name="cb_p_name"
                                                      Style="{StaticResource PropComboBoxStyle}"/>
                                            <!--这里是属性设置-->
                                            <!--同时有两个控件  也可以使用模板选择器-->

                                            <ComboBox Grid.Column="1" Name="cb" Visibility="Collapsed"
                                                      ItemsSource="{Binding ElementName=cb_p_name, Path=SelectedItem.ValueOptions}"
                                                      SelectedIndex="{Binding ElementName=cb_p_name, Path=SelectedItem.DefaultIndex}" 
                                                      SelectedValue="{Binding PropValue}"
                                                      Style="{StaticResource PropComboBoxStyle}"
                                                      />
                                            <TextBox  Grid.Column="1" Name="tb" Text="{Binding PropValue}"/>

                                            <!--属性子项删除-->
                                            <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Hyperlink FontFamily="{StaticResource Iconfont}" TextDecorations="None"
                                                           Command="{Binding ElementName=win,Path=DataContext.DeletePropCommand}"
                                                           CommandParameter="{Binding}">&#xe653;</Hyperlink>
                                            </TextBlock>
                                        </Grid>

                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=cb_p_name, Path=SelectedItem.PropType}" Value="1">
                                                <Setter TargetName="cb" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="tb" Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>

                            <!--2. 点位信息-->

                            <TextBlock Text="点位配置" Grid.Row="2" Margin="15,10" FontWeight="Bold" Foreground="#888" VerticalAlignment="Center"/>
                            <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Right" Margin="5,0" >
                                <Button Width="24" Height="24" 
                                    Style="{StaticResource WindowControlButtonStyle}" ToolTip="添加点位信息"
                                        Command="{Binding DataContext.AddVariableCommand, ElementName=win}">
                                    <Path Data="M0 5 10 5M5 0 5 10" Stroke="#555"/>
                                </Button>
                                <Button Content="&#xe675;" FontFamily="{StaticResource Iconfont}" Foreground="#666"
                                         Width="24" Height="24" Style="{StaticResource WindowControlButtonStyle}" ToolTip="导入点位信息"/>
                            </StackPanel>

                            <Grid Grid.Row="3" Margin="0,0,0,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="1.5*"/>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="点位名称" Foreground="#999" HorizontalAlignment="Center"/>
                                <TextBlock Text="地址" Grid.Column="1" Foreground="#999" HorizontalAlignment="Center"/>
                            </Grid>
                            <ScrollViewer Grid.Row="4" MaxHeight="200" VerticalScrollBarVisibility="Hidden" Margin="10,0,0,5">
                                <ItemsControl ItemsSource="{Binding CurrentDevice.VariableList}" Margin="0,0,10,0">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,1" Name="root">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="1.5*"/>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition Width="auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBox Text="{Binding VarName}"/>
                                                <TextBox Text="{Binding VarAddress}" Grid.Column="1" HorizontalContentAlignment="Center" Margin="2,0,0,0"/>
                                                <TextBlock Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <Hyperlink FontFamily="{StaticResource Iconfont}" TextDecorations="None"
                                                           Command="{Binding ElementName=win,Path=DataContext.DeleteVarCommand}"
                                                           CommandParameter="{Binding}">&#xe653;</Hyperlink>
                                                </TextBlock>
                                                <ToggleButton Grid.Column="2" Name="tb" Margin="3" Style="{StaticResource PointMoreButtonStlye}" Width="20"/>
                                                <Popup StaysOpen="False" IsOpen="{Binding ElementName=tb,Path=IsChecked}" 
                                                   PlacementTarget="{Binding ElementName=root}" AllowsTransparency="True"
                                                   VerticalOffset="2" HorizontalOffset="0">
                                                    <Border Background="#F7F9FA" Width="{Binding ElementName=root,Path=ActualWidth}"
                                                        CornerRadius="5" BorderBrush="#DDD" BorderThickness="1" Margin="3">
                                                        <Border.Effect>
                                                            <DropShadowEffect BlurRadius="10" Opacity="0.1" Color="Gray" ShadowDepth="0"/>
                                                        </Border.Effect>
                                                        <Grid Grid.Row="3" Margin="10,5">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="65"/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="30"/>
                                                                <RowDefinition Height="30"/>
                                                                <RowDefinition Height="30"/>
                                                            </Grid.RowDefinitions>
                                                            <TextBlock Text="数据类型" Foreground="#333" VerticalAlignment="Center"/>
                                                            <TextBlock Text="偏移量" Grid.Row="1" Foreground="#333" VerticalAlignment="Center"/>
                                                            <TextBlock Text="系数" Grid.Row="2" Foreground="#333" VerticalAlignment="Center"/>

                                                            <!--绑定List<string>     string[]类型的集合数据-->
                                                            <ComboBox Height="26" Style="{StaticResource PropComboBoxStyle}"
                                                                  SelectedValue="{Binding VarType}" Grid.Column="1">
                                                                <ComboBox.ItemsSource>
                                                                    <!--这里要用最根本的类型定义方式 否则无法在通讯过程中 获取其正确类型-->
                                                                    <x:Array Type="sys:String">
                                                                        <sys:String>Boolean</sys:String>
                                                                        <sys:String>Byte</sys:String>
                                                                        <sys:String>UInt16</sys:String>
                                                                        <sys:String>Int16</sys:String>
                                                                        <sys:String>UInt32</sys:String>
                                                                        <sys:String>Int32</sys:String>
                                                                        <sys:String>UInt64</sys:String>
                                                                        <sys:String>Int64</sys:String>
                                                                        <sys:String>Single</sys:String>
                                                                        <sys:String>Double</sys:String>
                                                                    </x:Array>
                                                                </ComboBox.ItemsSource>
                                                            </ComboBox>
                                                            <TextBox Text="{Binding Offset}" Grid.Row="1" Grid.Column="1" HorizontalContentAlignment="Center"
                                                                 VerticalAlignment="Center"/>
                                                            <TextBox Text="{Binding Modulus}" Grid.Row="2" Grid.Column="1" HorizontalContentAlignment="Center"
                                                                 VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </Border>
                                                </Popup>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>

                            <TextBlock Text="其他配置" Grid.Row="5" Margin="15,10" FontWeight="Bold" Foreground="#888" VerticalAlignment="Center"/>
                            <ToggleButton Grid.Row="6" Style="{StaticResource ManualToggleButtonStyle}"
                                Height="30" Margin="5,3" HorizontalContentAlignment="Stretch" Tag="5" Name="btnManual">
                                <Grid Margin="10,0">
                                    <TextBlock Text="手动控制选项" HorizontalAlignment="Left"/>
                                    <TextBlock Text="&#xe720;" FontFamily="{StaticResource Iconfont}" HorizontalAlignment="Right"/>
                                </Grid>
                            </ToggleButton>
                            <Button Grid.Row="7" Style="{StaticResource ControlButtonStyle}"
                                Height="30" Margin="5,3" HorizontalContentAlignment="Stretch" Tag="5"
                                Command="{Binding AlarmConditionCommand}">
                                <Grid Margin="10,0">
                                    <TextBlock Text="变量报警选项" HorizontalAlignment="Left"/>
                                    <TextBlock Text="&#xe720;" FontFamily="{StaticResource Iconfont}" HorizontalAlignment="Right"/>
                                </Grid>
                            </Button>
                            <Button Grid.Row="8" Style="{StaticResource ControlButtonStyle}" 
                                Height="30" Margin="5,3" HorizontalContentAlignment="Stretch" Tag="5"
                                Command="{Binding UnionConditionCommand}">
                                <Grid Margin="10,0">
                                    <TextBlock Text="自动联动选项" VerticalAlignment="Center" Foreground="#666"/>
                                    <TextBlock Text="&#xe720;" FontFamily="{StaticResource Iconfont}" 
                                           VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                </Grid>
                            </Button>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>
        <!--按钮-->
        <Border Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Height="42" CornerRadius="10"
                Margin="0,0,0,20">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#F7F9FA" Offset="0"/>
                    <GradientStop Color="#DDD" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" Color="#BBB" ShadowDepth="0" Opacity="0.3"/>
            </Border.Effect>
            <Grid Width="260" TextBlock.Foreground="#999" TextBlock.FontSize="18">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <ToggleButton Name="tb_component" IsChecked="True" Tag="10,0,0,10" Style="{StaticResource StateButtonStyle}" Margin="1">
                    <StackPanel>
                        <TextBlock Text="&#xe85e;" FontFamily="{StaticResource Iconfont}"
                           HorizontalAlignment="Center" Margin="0,1"/>
                        <TextBlock Text="组件" FontSize="9" HorizontalAlignment="Center"/>
                    </StackPanel>
                </ToggleButton>
                <ToggleButton Grid.Column="1" Name="tb_property" IsChecked="True" Style="{StaticResource StateButtonStyle}" Margin="1">
                    <StackPanel>
                        <TextBlock Text="&#xe66e;" FontFamily="{StaticResource Iconfont}"
                           HorizontalAlignment="Center" Margin="0,1"/>
                        <TextBlock Text="属性" FontSize="9" HorizontalAlignment="Center"/>
                    </StackPanel>
                </ToggleButton>
                <Border BorderBrush="White" Grid.Column="2" HorizontalAlignment="Center" BorderThickness="1,0,0,0"
                Margin="0,8">
                    <Border BorderBrush="#CCC" BorderThickness="1,0,0,0" Width="1"/>
                </Border>
                <Button Grid.Column="3" Style="{StaticResource ControlButtonStyle}" >
                    <StackPanel>
                        <TextBlock Text="&#xe718;" FontFamily="{StaticResource Iconfont}"
                           HorizontalAlignment="Center" Margin="0,1"/>
                        <TextBlock Text="删除" FontSize="9" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Grid.Column="4" Style="{StaticResource ControlButtonStyle}" 
                Command="{Binding SaveCommand}"
                CommandParameter="{Binding ElementName=win}" Name="btnSave">
                    <StackPanel>
                        <TextBlock Text="&#xe63c;" FontFamily="{StaticResource Iconfont}"
                           HorizontalAlignment="Center" Margin="0,1"/>
                        <TextBlock Text="保存" FontSize="9" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Grid.Column="5" Style="{StaticResource ControlButtonStyle}" Tag="0,10,10,0" Click="Button_Click">
                    <StackPanel>
                        <TextBlock Text="&#xe695;" FontFamily="{StaticResource Iconfont}"
                           HorizontalAlignment="Center" Margin="0,1"/>
                        <TextBlock Text="退出" FontSize="9" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </Grid>
        </Border>

        <!--消息提示-->
        <!--成功消息 过一段时间自动消失-->
        <Border Background="#EEFFFFFF" CornerRadius="10" Width="200" Height="45" VerticalAlignment="Top" x:Name="successbox" Margin="0,-80,0,0">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" Color="#DDD" ShadowDepth="0" Opacity="0.3"/>
            </Border.Effect>
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0">
                <TextBlock Text="&#xe60d;" FontFamily="{StaticResource Iconfont}" Foreground="LightGreen" VerticalAlignment="Center"
                           FontSize="26" Margin="10,0"/>
                <TextBlock Text="组态数据保存完成！" Foreground="ForestGreen" VerticalAlignment="Center" FontSize="12" FontWeight="Normal"/>
            </StackPanel>
        </Border>
        <!--异常消息 需要用户自己关闭-->
        <Border VerticalAlignment="Top" HorizontalAlignment="Center" 
                MinWidth="200" MaxWidth="350" x:Name="failedbox"
                Background="#EEFFFFFF" CornerRadius="10" MinHeight="45" Margin="0,-80,0,0">
            <Border.Effect>
                <DropShadowEffect BlurRadius="10" Color="#DDD" ShadowDepth="0" Opacity="0.3"/>
            </Border.Effect>
            <Grid Margin="10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="&#xe663;" FontFamily="{StaticResource Iconfont}" 
                           Foreground="OrangeRed" VerticalAlignment="Top"
                           FontSize="26" Margin="10,13"/>
                <TextBox Text="{Binding SaveFailedMessage,StringFormat=组态数据保存失败！异常原因：{0}}" 
                         Grid.Column="1" Background="Transparent" MaxLength="10" Effect="{x:Null}"
                         Foreground="#555" VerticalAlignment="Stretch" FontSize="12" FontWeight="Normal" 
                         Style="{x:Null}" Margin="0,10" IsReadOnly="True" TextWrapping="Wrap" 
                         BorderThickness="0" BorderBrush="Transparent" VerticalContentAlignment="Center"/>

                <Button Content="&#xe653;" FontFamily="{StaticResource Iconfont}" 
                        Grid.Column="2" Height="20" Width="20"
                        Style="{StaticResource ControlButtonStyle}" VerticalAlignment="Top" 
                        Margin="0,15" HorizontalAlignment="Right"
                        Command="{Binding CloseSaveFailedCommand}"
                        CommandParameter="{Binding ElementName=win}"/>
            </Grid>
        </Border>

        <Popup StaysOpen="False" IsOpen="{Binding  IsChecked, ElementName=btnManual}" 
               AllowsTransparency="True" PlacementTarget="{Binding ElementName=btnManual}" Placement="Left">

            <Border Background="#F7F9FA" Margin="5,5,10,5" Width="260" CornerRadius="5">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" Color="#DDD" ShadowDepth="0" Opacity="0.3"/>
                </Border.Effect>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!--这里希望箭头可以在Popup外显示，如果不包一层Canvas的话  会直接裁切掉多出来的部分
                        Canvas的画布范围无限大  因此 能保证箭头越界显示。-->
                    <Canvas>
                        <Path Data="M0 0 8 5 0 10" Fill="#F7F9FA" Canvas.Top="0" Canvas.Right="0" Margin="0,9,-10,0"/>
                    </Canvas>
                    <Border Height="1" Background="#EEE" VerticalAlignment="Bottom"/>
                    <Border Background="White" Grid.Row="1" CornerRadius="0,0,5,5"/>

                    <TextBlock Text="手动控制选项" VerticalAlignment="Center" Margin="10,0" FontWeight="Bold" Foreground="#777"/>
                    <Button Style="{StaticResource ControlButtonStyle}" Content="&#xe8fe;" FontFamily="{StaticResource Iconfont}"
                            Width="20" Height="20" HorizontalAlignment="Right" Margin="10,0" Tag="3"
                            Command="{Binding CurrentDevice.AddManualControlCommand}"/>


                    <Grid Grid.Row="1" Margin="10,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="28"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid TextBlock.Foreground="#999">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.2*"/>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="35"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="控制名称" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Text="控制地址" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Text="写入数据" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock Text="操作" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <ItemsControl Grid.Row="1" 
                                      ItemsSource="{Binding CurrentDevice.ManualControlList}" Margin="0,0,0,10"
                                      Name="ic1">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="30">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1.2*"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="35"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Text="{Binding ControlHeader}" Height="28" IsHitTestVisible="True" Focusable="True" FocusManager.IsFocusScope="True"/>
                                        <TextBox Text="{Binding ControlAddress}" Grid.Column="1" Height="28" TextAlignment="Center"/>
                                        <TextBox Text="{Binding Value}" Grid.Column="2" Height="28" TextAlignment="Center"/>

                                        <TextBlock Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <Hyperlink Command="{Binding DataContext.CurrentDevice.DeleteManualControlCommand,ElementName=win}"
                                                       CommandParameter="{Binding Path=.}">删除</Hyperlink>
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Grid>
            </Border>

        </Popup>
    </Grid>

</Window>
